<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itsource.aigou.core.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.itsource.aigou.core.domain.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="BIGINT" property="createTime" />
    <result column="updateTime" jdbcType="BIGINT" property="updateTime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="passowrd" jdbcType="CHAR" property="passowrd" />
    <result column="realName" jdbcType="VARCHAR" property="realName" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="loginCount" jdbcType="INTEGER" property="loginCount" />
    <result column="lastLoginTime" jdbcType="BIGINT" property="lastLoginTime" />
    <result column="loginTime" jdbcType="BIGINT" property="loginTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createTime, updateTime, username, passowrd, realName, state, loginCount, lastLoginTime, 
    loginTime
  </sql>
  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from t_employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="save" parameterType="cn.itsource.aigou.core.domain.Employee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_employee (createTime, updateTime, username, 
      passowrd, realName, state, 
      loginCount, lastLoginTime, loginTime
      )
    values (#{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{passowrd,jdbcType=CHAR}, #{realName,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{loginCount,jdbcType=INTEGER}, #{lastLoginTime,jdbcType=BIGINT}, #{loginTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="savePart" parameterType="cn.itsource.aigou.core.domain.Employee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="passowrd != null">
        passowrd,
      </if>
      <if test="realName != null">
        realName,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="loginCount != null">
        loginCount,
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime,
      </if>
      <if test="loginTime != null">
        loginTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="passowrd != null">
        #{passowrd,jdbcType=CHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="loginCount != null">
        #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updatePart" parameterType="cn.itsource.aigou.core.domain.Employee">
    update t_employee
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="passowrd != null">
        passowrd = #{passowrd,jdbcType=CHAR},
      </if>
      <if test="realName != null">
        realName = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="loginCount != null">
        loginCount = #{loginCount,jdbcType=INTEGER},
      </if>
      <if test="lastLoginTime != null">
        lastLoginTime = #{lastLoginTime,jdbcType=BIGINT},
      </if>
      <if test="loginTime != null">
        loginTime = #{loginTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="cn.itsource.aigou.core.domain.Employee">
    update t_employee
    set createTime = #{createTime,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      passowrd = #{passowrd,jdbcType=CHAR},
      realName = #{realName,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      loginCount = #{loginCount,jdbcType=INTEGER},
      lastLoginTime = #{lastLoginTime,jdbcType=BIGINT},
      loginTime = #{loginTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>