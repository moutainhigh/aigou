<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itsource.aigou.core.mapper.PayCreditMapper">
  <resultMap id="BaseResultMap" type="cn.itsource.aigou.core.domain.PayCredit">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="BIGINT" property="createTime" />
    <result column="ssoId" jdbcType="BIGINT" property="ssoId" />
    <result column="businessType" jdbcType="TINYINT" property="businessType" />
    <result column="businessName" jdbcType="VARCHAR" property="businessName" />
    <result column="businessKey" jdbcType="BIGINT" property="businessKey" />
    <result column="businessNote" jdbcType="VARCHAR" property="businessNote" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="creditBalance" jdbcType="INTEGER" property="creditBalance" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createTime, ssoId, businessType, businessName, businessKey, businessNote, credit, 
    type, creditBalance
  </sql>
  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_pay_credit
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from t_pay_credit
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="save" parameterType="cn.itsource.aigou.core.domain.PayCredit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_pay_credit (createTime, ssoId, businessType, 
      businessName, businessKey, businessNote, 
      credit, type, creditBalance
      )
    values (#{createTime,jdbcType=BIGINT}, #{ssoId,jdbcType=BIGINT}, #{businessType,jdbcType=TINYINT}, 
      #{businessName,jdbcType=VARCHAR}, #{businessKey,jdbcType=BIGINT}, #{businessNote,jdbcType=VARCHAR}, 
      #{credit,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{creditBalance,jdbcType=INTEGER}
      )
  </insert>
  <insert id="savePart" parameterType="cn.itsource.aigou.core.domain.PayCredit">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_pay_credit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="ssoId != null">
        ssoId,
      </if>
      <if test="businessType != null">
        businessType,
      </if>
      <if test="businessName != null">
        businessName,
      </if>
      <if test="businessKey != null">
        businessKey,
      </if>
      <if test="businessNote != null">
        businessNote,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="creditBalance != null">
        creditBalance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ssoId != null">
        #{ssoId,jdbcType=BIGINT},
      </if>
      <if test="businessType != null">
        #{businessType,jdbcType=TINYINT},
      </if>
      <if test="businessName != null">
        #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="businessKey != null">
        #{businessKey,jdbcType=BIGINT},
      </if>
      <if test="businessNote != null">
        #{businessNote,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="creditBalance != null">
        #{creditBalance,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updatePart" parameterType="cn.itsource.aigou.core.domain.PayCredit">
    update t_pay_credit
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="ssoId != null">
        ssoId = #{ssoId,jdbcType=BIGINT},
      </if>
      <if test="businessType != null">
        businessType = #{businessType,jdbcType=TINYINT},
      </if>
      <if test="businessName != null">
        businessName = #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="businessKey != null">
        businessKey = #{businessKey,jdbcType=BIGINT},
      </if>
      <if test="businessNote != null">
        businessNote = #{businessNote,jdbcType=VARCHAR},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="creditBalance != null">
        creditBalance = #{creditBalance,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="cn.itsource.aigou.core.domain.PayCredit">
    update t_pay_credit
    set createTime = #{createTime,jdbcType=BIGINT},
      ssoId = #{ssoId,jdbcType=BIGINT},
      businessType = #{businessType,jdbcType=TINYINT},
      businessName = #{businessName,jdbcType=VARCHAR},
      businessKey = #{businessKey,jdbcType=BIGINT},
      businessNote = #{businessNote,jdbcType=VARCHAR},
      credit = #{credit,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      creditBalance = #{creditBalance,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>