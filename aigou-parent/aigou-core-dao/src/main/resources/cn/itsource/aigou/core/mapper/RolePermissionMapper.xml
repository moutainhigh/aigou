<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itsource.aigou.core.mapper.RolePermissionMapper">
  <resultMap id="BaseResultMap" type="cn.itsource.aigou.core.domain.RolePermission">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="createTime" jdbcType="BIGINT" property="createTime" />
    <result column="updateTime" jdbcType="BIGINT" property="updateTime" />
    <result column="roleId" jdbcType="BIGINT" property="roleId" />
    <result column="permissionId" jdbcType="BIGINT" property="permissionId" />
    <result column="type" jdbcType="TINYINT" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, createTime, updateTime, roleId, permissionId, type
  </sql>
  <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role_permission
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="delete" parameterType="java.lang.Long">
    delete from t_role_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="save" parameterType="cn.itsource.aigou.core.domain.RolePermission">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role_permission (createTime, updateTime, roleId, 
      permissionId, type)
    values (#{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, 
      #{permissionId,jdbcType=BIGINT}, #{type,jdbcType=TINYINT})
  </insert>
  <insert id="savePart" parameterType="cn.itsource.aigou.core.domain.RolePermission">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_role_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        createTime,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="roleId != null">
        roleId,
      </if>
      <if test="permissionId != null">
        permissionId,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updatePart" parameterType="cn.itsource.aigou.core.domain.RolePermission">
    update t_role_permission
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        roleId = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        permissionId = #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="update" parameterType="cn.itsource.aigou.core.domain.RolePermission">
    update t_role_permission
    set createTime = #{createTime,jdbcType=BIGINT},
      updateTime = #{updateTime,jdbcType=BIGINT},
      roleId = #{roleId,jdbcType=BIGINT},
      permissionId = #{permissionId,jdbcType=BIGINT},
      type = #{type,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>